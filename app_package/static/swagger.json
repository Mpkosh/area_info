{
  "openapi": "3.0.2",
  "info": {
    "title": "Population and Territory API",
    "version": "1.0.0",
    "description": "Get Population and Territory information for a given area and year"
  },
  "servers": [
    {
      "url": "http://10.32.1.47:5000/api/",
      "description": "main server"
    },
    {
      "url": "https://area-info.onrender.com/api/",
      "description": "just in case"
    },
    {
      "url": "http://127.0.0.1:5000/api/",
      "description": "local"
    }
  ],
  "paths": {
    "/regions/main_info": {
      "get": {
        "tags": [
          "Module 11"
        ],
        "summary": "Territory information (recent year): geometry, population, density",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/show_level"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main_info_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/detailed_info": {
      "get": {
        "tags": [
          "Module 11"
        ],
        "summary": "Territory detailed information (all years)",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/detailed_info_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/values_identities": {
      "get": {
        "tags": [
          "Module 11"
        ],
        "summary": "Matrix of how satisfied are different values of different identity groups",
        "description": "The output data is a dictionary with five parameters which represent five identity groups:<br> - \"comm\" - common. Some stuff that is important for each identity group.<br> - \"soc_workers\" - social identity of people who are able to work.<br> - \"soc_old\" - social identity of elderly people.<br> - \"soc_parents\" - social identity of people with children (considered to be able to work).<br> - \"loc\" - local. Some stuff that is important for people in connection with their local identity.<br><br> Each one of the beforementioned parameters has three parameters. These parameters are levels of values:<br> - \"dev\" - values of development.<br> - \"soc\" - social values.<br> - \"bas\" - basic values.<br><br> Finally for each identity group and for each values level there's an array of three numbers:<br> 0. The computed value of satisfaction of the given identity group in connection with the given values level for the given district.<br> 1. The mean value of satisfaction of the given identity group in connection with the given values level for the region of the given dictrict.<br> 2. The proposed color intensity of the cell which would represent the value given at the position 0. Positive numbers stand for green color, negative ones - for red color. The maximum intensities are 1 and -1 for green and red colors respectively. The minimum intensity is 0 - white color.",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/feature_changed"
          },
          {
            "$ref": "#/components/parameters/changes_dict"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/values_identities_matrix_200"
                }
              }
            }
          }
        }
      }
    },
    "/migrations/main_info": {
      "get": {
        "tags": [
          "Module 21"
        ],
        "summary": "Migration information (recent year): num in/out, factors",
        "description": "Inflow of <young / able to work / old> migrants; <br>  Outflow of <young / able to work / old> migrants; <br> Migration factors: avgemployers, avgsalary, ... <br> if mig_destinations=True => + geojson with polygons, geojson with lines",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/show_level"
          },
          {
            "$ref": "#/components/parameters/mig_destinations"
          },
          {
            "$ref": "#/components/parameters/change_lo_level"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mig_main_info_200"
                }
              }
            }
          }
        }
      }
    },
    "/migrations/detailed_info": {
      "get": {
        "tags": [
          "Module 21"
        ],
        "summary": "Migration detailed information (all years): num in/out, types, factors",
        "description": "Inflow of <across russia / outside region / inside region /  international / interregional / all / other countries / CIS counries> migrants; <br>  Outflow of the same migrants; <br> Migration factors: avgemployers, avgsalary, ... <br><br> // В пределах России, Внешняя (для региона) миграция, Внутрирегиональная,  Международная, Межрегиональная, Миграция всего,  С другими зарубежными странами, Со странами СНГ<br>if mig_destinations=True => + geojson with polygons, geojson with lines",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/mig_destinations"
          },
          {
            "$ref": "#/components/parameters/change_lo_level"
          },
          {
            "$ref": "#/components/parameters/given_year"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mig_detailed_info_200"
                }
              }
            }
          }
        }
      }
    },
    "/migrations/forecast": {
      "get": {
        "tags": [
          "Module 21"
        ],
        "summary": "Migration forecast (saldo) based on 16 features",
        "description": "Output -- saldo <br> Input -- 16 features: year, popsize, avgemployers, avgsalary, shoparea,foodseats, retailturnover, livarea, sportsvenue, servicesnum, roadslen, livestock, harvest, agrprod, hospitals, beforeschool",
        "parameters": [
          {
            "$ref": "#/components/parameters/year"
          },
          {
            "$ref": "#/components/parameters/popsize"
          },
          {
            "$ref": "#/components/parameters/avgemployers"
          },
          {
            "$ref": "#/components/parameters/avgsalary"
          },
          {
            "$ref": "#/components/parameters/shoparea"
          },
          {
            "$ref": "#/components/parameters/foodseats"
          },
          {
            "$ref": "#/components/parameters/retailturnover"
          },
          {
            "$ref": "#/components/parameters/livarea"
          },
          {
            "$ref": "#/components/parameters/sportsvenue"
          },
          {
            "$ref": "#/components/parameters/servicesnum"
          },
          {
            "$ref": "#/components/parameters/roadslen"
          },
          {
            "$ref": "#/components/parameters/livestock"
          },
          {
            "$ref": "#/components/parameters/harvest"
          },
          {
            "$ref": "#/components/parameters/agrprod"
          },
          {
            "$ref": "#/components/parameters/hospitals"
          },
          {
            "$ref": "#/components/parameters/beforeschool"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mig_forecast_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/density_data_full": {
      "get": {
        "tags": [
          "returns geojson"
        ],
        "summary": "Population density by parent id; children with separate geometry",
        "parameters": [
          {
            "$ref": "#/components/parameters/parent_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/density_data_full_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/density_data": {
      "get": {
        "tags": [
          "returns geojson"
        ],
        "summary": "Population density",
        "parameters": [
          {
            "$ref": "#/components/parameters/parent_id"
          },
          {
            "$ref": "#/components/parameters/given_year"
          },
          {
            "$ref": "#/components/parameters/last_only"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/density_json_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/pyramid_data": {
      "get": {
        "tags": [
          "returns json"
        ],
        "summary": "Age-sex pyramid",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/given_year"
          },
          {
            "$ref": "#/components/parameters/n_age_groups"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pyramid_json_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/migration_data": {
      "get": {
        "tags": [
          "returns json"
        ],
        "summary": "Migration estimate",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/given_year"
          },
          {
            "$ref": "#/components/parameters/n_age_groups"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/migration_json_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/area_needs": {
      "get": {
        "tags": [
          "returns json"
        ],
        "summary": "Area needs as a weighted sum of population needs",
        "parameters": [
          {
            "$ref": "#/components/parameters/territory_id"
          },
          {
            "$ref": "#/components/parameters/given_year"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/area_needs_json_200"
                }
              }
            }
          }
        }
      }
    },
    "/regions/pop_needs": {
      "get": {
        "tags": [
          "returns json"
        ],
        "summary": "Population needs by age (expert opinion). Estimated percent for each category",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pop_needs_json_200"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "parent_id": {
        "name": "parent_id",
        "default": 34,
        "in": "query",
        "description": "Parent id of desired areas.",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "territory_id": {
        "name": "territory_id",
        "default": 34,
        "in": "query",
        "description": "Territory id.",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "last_only": {
        "name": "last_only",
        "in": "query",
        "description": "To show only last year info.",
        "required": false,
        "default": true,
        "schema": {
          "type": "boolean"
        }
      },
      "show_level": {
        "name": "show_level",
        "default": 2,
        "in": "query",
        "description": "Territory levels to show.",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "okato_id": {
        "name": "okato_id",
        "default": 41206000000,
        "in": "query",
        "description": "OKATO id of the area.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "given_year": {
        "name": "given_year",
        "default": 2020,
        "in": "query",
        "description": "Data for a given year",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "n_age_groups": {
        "name": "n_age_groups",
        "default": 5,
        "in": "query",
        "description": "Number of ages in an age interval",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "mig_destinations": {
        "name": "mig_destinations",
        "default": false,
        "in": "query",
        "description": "Include migration destinations info.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "change_lo_level": {
        "name": "change_lo_level",
        "default": true,
        "in": "query",
        "description": "Group auxiliary areas one level higher.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "feature_changed": {
        "name": "feature_changed",
        "default": false,
        "in": "query",
        "description": "Whether a user changed some parameters for launching a scenario.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "changes_dict": {
        "name": "changes_dict",
        "default": "{}",
        "in": "query",
        "description": "New values of the parameters changed by a user for a scenario (json).",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "year": {
        "name": "year",
        "default": 2023,
        "in": "query",
        "description": "Год",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "popsize": {
        "name": "popsize",
        "default": 15039,
        "in": "query",
        "description": "Население (чел)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "avgemployers": {
        "name": "avgemployers",
        "default": 2043,
        "in": "query",
        "description": "Среднее число работников организаций (чел.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "avgsalary": {
        "name": "avgsalary",
        "default": 17624.2,
        "in": "query",
        "description": "Средняя зарплата (руб.)",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "shoparea": {
        "name": "shoparea",
        "default": 4333,
        "in": "query",
        "description": "Площадь торговых залов магазинов (кв. м.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "foodseats": {
        "name": "foodseats",
        "default": 240,
        "in": "query",
        "description": "Количество мест в ресторанах кафе барах (место)",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "retailturnover": {
        "name": "retailturnover",
        "default": 684065.8,
        "in": "query",
        "description": "Оборот розничной торговли без малых предприятий (тыс. руб.)",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "livarea": {
        "name": "livarea",
        "default": 29.7,
        "in": "query",
        "description": "Жилая площадь на одного человека (кв. м.)",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "sportsvenue": {
        "name": "sportsvenue",
        "default": 46,
        "in": "query",
        "description": "Число спортивных сооружений (шт.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "servicesnum": {
        "name": "servicesnum",
        "default": 50,
        "in": "query",
        "description": "Объекты бытового обслуживания (шт.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "roadslen": {
        "name": "roadslen",
        "default": 115.1,
        "in": "query",
        "description": "Длина дорог (км)",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "livestock": {
        "name": "livestock",
        "default": 33104,
        "in": "query",
        "description": "Поголовье скота всех видов (шт.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "harvest": {
        "name": "harvest",
        "default": 9860,
        "in": "query",
        "description": "Урожайность овощей (цент.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "agrprod": {
        "name": "agrprod",
        "default": 1012325.2,
        "in": "query",
        "description": "Продукция сельского хозяйства (тыс. руб.)",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "hospitals": {
        "name": "hospitals",
        "default": 19,
        "in": "query",
        "description": "Лечебно-профилактические организации (шт.)",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "beforeschool": {
        "name": "beforeschool",
        "default": 788.2,
        "in": "query",
        "description": "Число мест в дошкольных обр. учреждениях (шт.)",
        "required": true,
        "schema": {
          "type": "number"
        }
      }
    },
    "schemas": {
      "404": {
        "title": "Sample",
        "type": "object",
        "properties": {
          "placeholder": {
            "type": "string",
            "description": "Placeholder description"
          }
        }
      },
      "pyramid_json_200": {
        "title": "Sample",
        "type": "object",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/columns"
          },
          "index": {
            "$ref": "#/components/schemas/index"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [
              [
                10192,
                -10937
              ],
              [
                13393,
                -12231
              ],
              [
                3816,
                -1809
              ]
            ]
          }
        }
      },
      "migration_json_200": {
        "title": "Sample",
        "type": "object",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/columns"
          },
          "index": {
            "$ref": "#/components/schemas/index"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [
              [
                256,
                259
              ],
              [
                -15,
                41
              ],
              [
                391,
                310
              ]
            ]
          }
        }
      },
      "density_json_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "2020": {
              "type": "number",
              "example": 1786.1
            },
            "territory_id": {
              "type": "integer"
            },
            "name": {
              "type": "string",
              "example": "Большеврудское"
            },
            "2020_dnst": {
              "type": "number",
              "example": 3.6
            },
            "binned": {
              "type": "string",
              "example": "0 -- 10"
            },
            "geometry": {
              "example": ""
            }
          }
        }
      },
      "density_data_full_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "2020": {
                "type": "number"
              },
              "territory_id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "2020_dnst": {
                "type": "number"
              },
              "2020_dnst_binned": {
                "type": "string"
              },
              "geometry_villages": {
                "type": "string"
              },
              "geometry": {
                "type": "string"
              }
            }
          }
        },
        "example": [
          {
            "2023": 50211,
            "territory_id": 10,
            "name": "Волосовский",
            "2023_dnst": 18.58,
            "2023_dnst_binned": "10 - 100",
            "geometry_villages": "",
            "geometry": ""
          },
          {
            "2023": 59877,
            "territory_id": 97,
            "name": "Киришский",
            "2023_dnst": 19.54,
            "2023_dnst_binned": "10 - 100",
            "geometry_villages": "",
            "geometry": ""
          }
        ]
      },
      "main_info_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "territory_id": {
              "type": "integer",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Ленинградская область"
            },
            "geometry": {
              "example": ""
            },
            "density": {
              "type": "number",
              "example": 24.12
            },
            "pop_all": {
              "type": "number",
              "example": 2023767
            },
            "pop_younger": {
              "type": "number",
              "example": 303286
            },
            "pop_can_work": {
              "type": "number",
              "example": 1416751
            },
            "pop_older": {
              "type": "number",
              "example": 303730
            },
            "coeff_death": {
              "type": "number",
              "example": 0
            },
            "coeff_birth": {
              "type": "number",
              "example": 0
            },
            "coeff_migration": {
              "type": "number",
              "example": 0
            }
          }
        }
      },
      "values_identities_matrix_200": {
        "title": "Sample",
        "type": "object",
        "properties": {
          "comm": {
            "type": "object",
            "properties": {
              "dev": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  null,
                  null,
                  null
                ]
              },
              "soc": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.14,
                  0.27,
                  -0.46
                ]
              },
              "bas": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.04,
                  0.52,
                  -0.93
                ]
              }
            }
          },
          "soc_workers": {
            "type": "object",
            "properties": {
              "dev": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  null,
                  null,
                  null
                ]
              },
              "soc": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.89,
                  0.51,
                  0.78
                ]
              },
              "bas": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.07,
                  0.42,
                  -0.83
                ]
              }
            }
          },
          "soc_old": {
            "type": "object",
            "properties": {
              "dev": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.06,
                  0.13,
                  -0.52
                ]
              },
              "soc": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.12,
                  0.28,
                  -0.55
                ]
              },
              "bas": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.04,
                  0.52,
                  -0.93
                ]
              }
            }
          },
          "soc_parents": {
            "type": "object",
            "properties": {
              "dev": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0,
                  0.46,
                  -1
                ]
              },
              "soc": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.89,
                  0.51,
                  0.78
                ]
              },
              "bas": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.41,
                  0.2,
                  0.26
                ]
              }
            }
          },
          "loc": {
            "type": "object",
            "properties": {
              "dev": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0,
                  0.16,
                  -1
                ]
              },
              "soc": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0,
                  0.49,
                  -1
                ]
              },
              "bas": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  0.93,
                  0.72,
                  0.74
                ]
              }
            }
          }
        }
      },
      "detailed_info_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "pop_df": {
              "type": "object",
              "example": [
                "..."
              ]
            },
            "groups_df": {
              "type": "object",
              "example": [
                "..."
              ]
            },
            "dynamic_pop_df": {
              "type": "object",
              "example": [
                "..."
              ]
            },
            "soc_pyramid_df": {
              "type": "object",
              "example": [
                "..."
              ]
            },
            "values_df": {
              "type": "object",
              "example": [
                "..."
              ]
            }
          }
        }
      },
      "mig_main_info_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "territory_id": {
              "type": "integer",
              "example": 34
            },
            "name": {
              "type": "string",
              "example": "Всеволожский муниципальный район"
            },
            "geometry": {
              "example": ""
            },
            "younger_in": {
              "type": "number",
              "example": 13974
            },
            "work_in": {
              "type": "number",
              "example": 36966
            },
            "old_in": {
              "type": "number",
              "example": 4891
            },
            "younger_out": {
              "type": "number",
              "example": 6588
            },
            "work_out": {
              "type": "number",
              "example": 18678
            },
            "old_out": {
              "type": "number",
              "example": 2229
            },
            "avgemployers": {
              "type": "number",
              "example": 70096
            },
            "other": {
              "type": "string",
              "example": "..."
            }
          }
        }
      },
      "mig_detailed_info_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "year": {
              "type": "number",
              "example": 2019
            },
            "russia_in": {
              "type": "number",
              "example": 58967
            },
            "outside_region_in": {
              "type": "number",
              "example": 56890
            },
            "inside_region_in": {
              "type": "number",
              "example": 6466
            },
            "international_in": {
              "type": "number",
              "example": 4389
            },
            "interregional_in": {
              "type": "number",
              "example": 52501
            },
            "all_mig_in": {
              "type": "number",
              "example": 63356
            },
            "other_countries_in": {
              "type": "number",
              "example": 239
            },
            "cis_counries_in": {
              "type": "number",
              "example": 4150
            },
            "russia_out": {
              "type": "number",
              "example": 21423
            },
            "other": {
              "type": "string",
              "example": "..."
            }
          }
        }
      },
      "mig_forecast_200": {
        "title": "Sample",
        "type": "array",
        "items": {
          "type": "integer",
          "example": -92
        }
      },
      "area_needs_json_200": {
        "title": "Sample",
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Здравоохранение",
              "Жилье",
              "Питание",
              "Транспорт",
              "Социальные связи",
              "Образование",
              "Досуг",
              "Волонтерство"
            ]
          },
          "index": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              0
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [
              [
                0.1500906567,
                0.1523598427,
                0.116607779,
                0.1289441921,
                0.1566710245,
                0.1071761415,
                0.1229699438,
                0.0651804198
              ]
            ]
          }
        }
      },
      "pop_needs_json_200": {
        "title": "Sample",
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Возраст",
              "Здравоохранение",
              "Жилье",
              "Питание",
              "Транспорт",
              "Социальные связи",
              "Образование",
              "Досуг",
              "Волонтерство"
            ]
          },
          "index": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              [
                "0-6",
                90,
                60,
                80,
                40,
                70,
                50,
                60,
                10
              ],
              [
                "7-11",
                80,
                50,
                60,
                50,
                80,
                80,
                70,
                20
              ]
            ]
          }
        }
      },
      "columns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "minItems": 2,
        "maxItems": 2,
        "example": [
          "Женщины",
          "Мужчины"
        ]
      },
      "index": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "0-4",
          "5-9",
          "10-14"
        ]
      }
    }
  }
}